{"ast":null,"code":"var _jsxFileName = \"/Users/brunolobato/Desktop/NLW/web/src/pages/Landing/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport logoImg from \"../../assets/images/logo.svg\";\nimport landingImg from \"../../assets/images/landing.svg\";\nimport studyIcon from \"../../assets/images/icons/study.svg\";\nimport giveClassesIcon from \"../../assets/images/icons/give-classes.svg\";\nimport purpleHeartIcon from \"../../assets/images/icons/purple-heart.svg\";\nimport './styles.css';\nimport api from '../../services/api';\n\nfunction Landing() {\n  const [TotalConnection, setTotalConnections] = useState(0); // 2 parâmetros - 1ª é uma função, 2º é um array de dependências onde podes passar variáveis. Sempre que uma dessas variáveis for alterada a função do 1º parâmetro corre\n  // para correr a função do 1º parâmetro no loading da página basta deixar o array vazio\n\n  useEffect(() => {\n    api.get('/connections').then(response => {\n      const total = response.data.total;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-landing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-landing-content\",\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Proffy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }\n  }, \"Sua plataforma de estudos online.\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: landingImg,\n    className: \"hero-image\",\n    alt: \"Plataforma de estudos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/study\",\n    className: \"study\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: studyIcon,\n    alt: \"Estudar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), \"Estudar\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/give-classes\",\n    className: \"give-classes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: giveClassesIcon,\n    alt: \"Estudar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), \"Dar Aulas\")), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total-connections\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"Total de 200 conex\\xF5es j\\xE1 realizadas \", /*#__PURE__*/React.createElement(\"img\", {\n    src: purpleHeartIcon,\n    alt: \"cora\\xE7\\xE3o roxo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 42\n    }\n  }))));\n}\n\nexport default Landing;","map":{"version":3,"sources":["/Users/brunolobato/Desktop/NLW/web/src/pages/Landing/index.tsx"],"names":["React","useState","useEffect","Link","api","Landing","TotalConnection","setTotalConnections","get","then","response","total","data","logoImg","landingImg","studyIcon","giveClassesIcon","purpleHeartIcon"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;;;AASA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,SAASC,OAAT,GAAmB;AAClB,QAAM,CACLC,eADK,EAELC,mBAFK,IAGFN,QAAQ,CAAC,CAAD,CAHZ,CADkB,CAMlB;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,GAAG,CAACI,GAAJ,CAAQ,cAAR,EAAwBC,IAAxB,CAA8BC,QAAD,IAAc;AAC1C,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcD,KAA5B;AACA,KAFD;AAGA,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACC;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,EAAE,EAAC,sBAAR;AAA+B,IAAA,SAAS,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAEE,OAAV;AAAmB,IAAA,GAAG,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFD,CADD,eAKC;AAAK,IAAA,GAAG,EAAEC,UAAV;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAA6C,IAAA,GAAG,EAAC,uBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD,eAMC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAEC,SAAV;AAAqB,IAAA,GAAG,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,YADD,eAKC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,GAAG,EAAEC,eAAV;AAA2B,IAAA,GAAG,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,cALD,CAND,eAgBC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEACqC;AAAK,IAAA,GAAG,EAAEC,eAAV;AAA2B,IAAA,GAAG,EAAC,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,CAhBD,CADD,CADD;AAwBA;;AAED,eAAeZ,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport logoImg from '../../assets/images/logo.svg';\nimport landingImg from '../../assets/images/landing.svg';\n\nimport studyIcon from '../../assets/images/icons/study.svg';\nimport giveClassesIcon from '../../assets/images/icons/give-classes.svg';\nimport purpleHeartIcon from '../../assets/images/icons/purple-heart.svg';\n\nimport './styles.css';\nimport api from '../../services/api';\n\nfunction Landing() {\n\tconst [\n\t\tTotalConnection,\n\t\tsetTotalConnections\n\t] = useState(0);\n\n\t// 2 parâmetros - 1ª é uma função, 2º é um array de dependências onde podes passar variáveis. Sempre que uma dessas variáveis for alterada a função do 1º parâmetro corre\n\t// para correr a função do 1º parâmetro no loading da página basta deixar o array vazio\n\tuseEffect(() => {\n\t\tapi.get('/connections').then((response) => {\n\t\t\tconst total = response.data.total\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div id=\"page-landing\">\n\t\t\t<div id=\"page-landing-content\" className=\"container\">\n\t\t\t\t<div className=\"logo-container\">\n\t\t\t\t\t<img src={logoImg} alt=\"Proffy\" />\n\t\t\t\t\t<h2>Sua plataforma de estudos online.</h2>\n\t\t\t\t</div>\n\t\t\t\t<img src={landingImg} className=\"hero-image\" alt=\"Plataforma de estudos\" />\n\t\t\t\t<div className=\"buttons-container\">\n\t\t\t\t\t<Link to=\"/study\" className=\"study\">\n\t\t\t\t\t\t<img src={studyIcon} alt=\"Estudar\" />\n\t\t\t\t\t\tEstudar\n\t\t\t\t\t</Link>\n\t\t\t\t\t<Link to=\"/give-classes\" className=\"give-classes\">\n\t\t\t\t\t\t<img src={giveClassesIcon} alt=\"Estudar\" />\n\t\t\t\t\t\tDar Aulas\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t\t<span className=\"total-connections\">\n\t\t\t\t\tTotal de 200 conexões já realizadas <img src={purpleHeartIcon} alt=\"coração roxo\" />\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}